* Tasks [18/29]
*** TODO remap find-file etc?
<ded`> With my setup, C-h f find-file says that it is "remapped to
       `ido-find-file'". Two questions: (a) how do I call find-file from a
       program so that it picks up ido-find-file if appropriate? (b) How is
       this "remapping" implemented? (I can see it's different from
       e.g. defalias)  [14:02]
<ded`> I was using (call-interactively 'find-file) but this doesn't pick up
       the remapping.
<noisesmith> ded`: (command-remapping <cmd>) may be what you want? returns nil
	     if not remapped, the remapped alternative otherwise  [14:07]
<ded`> noisesmith: Thanks again. I should have done apropos. Is the answer to
       my (b) that "remapping" involves substitute-key-definition?  [14:10]
<noisesmith> ded`: it is "a special kind of key binding, using a special "key
	     sequence" which includes a command name", according to the elisp
	     manual
<noisesmith> "(define-key my-mode-map [remap kill-line] 'my-kill-line)" is an
	     example of how it is invoked
<noisesmith> so it is like a keybinding, but overrides an M-x command too
<noisesmith> in the appropriate mode
*** DONE Email from Eric Fraga

Eric S Fraga <ucecesf@ucl.ac.uk> writes:
[...]
> Some more comments:
>
> - I like the fact I can customise RET or, more to the point, that it
>   be consistent with the rest of org-mode.  I personally would set
>   org-buffers-follow-link-method to 'current-window but then it would
>   be nice to have SPC, say, open the buffer in another window, to
>   behave consistently with org-agenda?

OK, you motivated me to be a bit more systematic. This table is with
(setq pop-up-windows t), which is default in emacs23.

|              | switch       | switch          | display other-window |           |
|              | same window  | other window    | without switch       | next item |
|              |              | (pop-to-buffer) |                      |           |
|--------------+--------------+-----------------+----------------------+-----------|
| dired        | RET          | o               | unavailable?         | SPACE     |
| org links    | unavailable? | RET             | unavailable? [3]     |           |
| org agenda   | RET          | TAB             | SPACE [1]            |           |
| magit log    | unavailable? | RET             | SPACE                |           |
| gnus summary | unavailable? | unavailable?    | RET, SPACE [2]       |           |
| ibuffer      | RET          | o               | C-o                  | SPACE     |
| list-buffers | RET          | o               | C-o                  | SPACE     |
|--------------+--------------+-----------------+----------------------+-----------|
| org-buffers  | RET          | [fn:1]                | SPACE[4]             |           |


So I've added the SPACE binding you suggest. And, although it would be
out-of-keeping with other org-mode links, it looks like there's a good
argument for making RET switch to the buffer in the same window, like
dired et al. I've done that.

> - I would prefer some consistency or symmetry in the creation and
>   burying of the buffer: given that (by default) org-buffers-list
>   brings up a new window in the current frame, quitting that buffer
>   should also delete the window;  otherwise, I would like it to not
>   split the frame.  Does that make sense?

Yes. This is all to do with pop-to-buffer versus switch-to-buffer, my
understanding of which was shaky. I have now changed to using
switch-to-buffer by default, and I think this gives behaviour
consistent with what you requested. I've also introduced a variable
org-buffers-switch-to-buffer-function which can be set to
'pop-to-buffer, in which case the variables pop-up-windows and
pop-up-frames, amongst others, become relevant.

> - what's the point of orb-buffers-toggle-heading? 

Cleaner (less starry) appearance, seeing as many buffers are named
*Like This*.

> I ask because I
>   don't understand what functionality it adds and the default binding
>   (h) conflicts with my speed keys (I use vi-like bindings for speed
>   motion keys).

I overlooked that before. I've moved it to H.

> - In column view mode (which I also have not figured out why it would
>   be used...), the heading uses a different font size than the normal
>   entries so the headings don't line up at all.  This may be my fault,
>   however.

I don't see this. emacs -q? I've changed the column view binding to T
("tabular") so that the standard speed commands c and C are
available. As for point, the best I can think of is that it kind of
comes full circle to the list-buffers / ibuffers appearance thus
showing that most things are a subset of org.

> - if I bring up the buffers list a second time, having created a new
>   buffer in the meantime, the new buffer does not appear until I hit
>   'g'.  I think any invocation of org-buffers-list should do an
>   automatic update of the list.

A C-u prefix to org-buffers-list now forces update. I don't think I
agree that it should be default. Speed is my concern -- I'd like it to
show the listing immediately when possible. I believe we're both using
atom-powered netbooks, and mine at least is a little sluggish at
generating the listing (I tried, and failed, to speed it up). I notice
dired says "The directory has changed on disk, use g to update" so
maybe I could do the same.

>
> - Lastly, it would be nice to either avoid the single blank line at
>   the start of the buffer or have point be at the first heading.
>   Having point at the first (empty) line seems to cause some problems
>   with speed motion keys sometimes...  it also wastes a line!

I've made point go to the first heading when the listing is
created. However, I am wary about getting rid of that line, as I
believe Carsten has said that Org/outline.el isn't always happy with
first heading on first line. Certainly, I'm not inserting that newline
character explicitly -- it appears via my (ab)use of Carsten's
functions.

>
>   Actually, I think it might be useful to have point be placed at the
>   heading that corresponds to the buffer currently being visited when
>   the org-buffers-list command is invoked.  A thought.

Yes I like that and I've done it. It will only happen with a fresh
listing though (first time, or C-u prefix), Otherwise buffer point is
maintained.

Along similar lines, I've made it so that if you invoke C-x f
(find-file) or C-x d (dired), the minibuffer prompt will start from
the directory of the buffer on the current line, rather than whatever
directory is associated with the listings buffer. I've found this
useful (only works for the keybindings currently, not for M-x or menu).

Also you can now flag buffers for reversion (i.e. revert-buffer) using
"r"[5], and a few other changes.

Thanks, your suggestions have been really helpful.

Dan

http://github.com/dandavison/org-buffers
http://github.com/dandavison/org-buffers/raw/master/org-buffers.el

***** Footnotes

[1] scrolls but does not advance to next automatically

[2] scrolls and space advances to next entry on reaching end; RET doesn't advance

[3] On a side note, one thing this table suggests is that for org-mode
links, SPACE could be bound to
display-in-other-window-without-switching-and-scroll (?)

[4] scrolls and advances

[5] Helpful if you switch branches in version control, but maybe magit does it already somehow.

*** Get keybindings in all docstrings?
    Using \\{} or whatever
*** Use use-empty-active-region?
*** Add follow link to TAB (in personal config)?
*** PROPOSED Use org-buffer-property-keys
*** PROPOSED Make commands behave as if issued from the buffer at point?
    I.e. When in org-buffers, and issue C-x d, default-directory set
    to d-d of buffer at point.
*** TODO Don't get possible properties from buffer
*** DONE Return to lines state if start in line state
*** DONE Move to next after d/u
*** TODO Check whether we really need to refresh in some places?
    If current state same as new state then don't refresh?
*** TODO Check whether already in OK state [[file:org-buffers.el::org%20buffers%20list%20by%20NONE][here]]
*** TODO use reset state to set state initially
    Don't code defaults twice
*** TODO Only offer sensible grouping properties, with shortcut keys
*** DONE Keybindings for flat and column view
*** DONE Clean out unused code / undesired functionality
    - Get rid of insert-as-list-item?
    - Get rid of [[file:org-buffers.el::while%20not%20org%20buffers%20state%20eq%20atom%20heading][this]] while loop
*** STARTED Operations on buffers [3/3]
    These work by setting tags to define pending operations, and then
    executing those operations.
***** Show buffer-modified
***** Save buffer
***** Show buffer read-only
***** Link following behaviour
      The philosophy is that RET should do what org would do on a link; this
      concern overrides the fact that dired and Buffer-menu-mode use switch
      to buffer in current window on RET. Instead we use, currently, '.' for
      current window. Like dired and Buffer-menu-mode we use 'o' for other
      window (which may well have the same effect as RET).

***** Implement other actions of dired or buffer-menu-mode?
***** DONE o
***** DONE u
***** DONE kill buffer
*** STARTED Filtering, folding and sorting
***** TODO Add modes which should be folded by default
***** DONE Buffer-name blacklist for filtering
***** DONE Major mode blacklist for filtering
***** Sort by recency?
***** When grouping by file/dir, use directory hierarchy?
***** When grouped by dirs, make dirnames links to dired?
***** Store further buffer properties
      - buffer-modified-p
      - buffer size
      - buffer minor modes
*** TODO Sort upper case with lower case?
*** DONE Sorting withing groups?
*** TODO Speed up
    The critical functions are
    - org-buffers-insert-entry
    - org-buffers-group-by

    - [X] Profiling ::
	  How did Matt Lundin do timings?
*** PROPOSED use inhibit-read-only-p
*** PROPOSED Display multiple visible buffers
*** TODO order of calls
   around (org-overview) in o-b-list
*** Message when following link to visible buffer
    and hence doing nothing
*** Extend to files?
    - recent files?
*** Organise by frames
*** Is (s-e (b-o-l) (outline-level)) idiomatic?
*** DONE Deal with acting on region more correctly
    I.e. Is it right that d is for this line whereas D is for region?
*** DONE Implement clean view using regexp substitution
*** DONE Use stripped down mapping function
*** DONE Renaming
***** DONE s/(org-buffers-)list/$1/
***** DONE params -> state
*** DONE Set meaningful tags as buffer-local variable
    To be offered as tag completions
*** DONE Add hook
    E.g. to
    - replace the terminal -mode on major mode names
    - filter buffers / major modes
*** DONE Make RET work elsewhere on header line to follow link?
    Could do this with a speed command.
*** DONE Macro for working with params
* Profiling
*** code
#+begin_src emacs-lisp :results silent
  (org-buffers-list)
  (elp-reset-all)
  (elp-instrument-package "org-buffers")
  (dotimes (i 10)
    (message (format "%d" i))
    (org-buffers-list:by "major-mode"))
  (elp-results)
#+end_src
*** uncompiled
org-buffers-list:by                        10          17.556924     1.7556923999
org-buffers-list                           10          17.554197000  1.7554197000
org-buffers-group-by                       10          7.043676      0.7043676
org-buffers-map-entries                    160         5.8240440000  0.036400275
org-buffers-parse-selected-entries         150         5.6013409999  0.0373422733
org-buffers-insert-parsed-entry            450         0.6689990000  0.0014866644
org-buffers-get-buffer-props               450         0.0522920000  0.0001162044
org-buffers-exclude-p                      690         0.027557      3.993...e-05
org-buffers-mode                           10          0.000925      9.25e-05
org-buffers-set-state                      20          0.000686      3.43e-05

*** compiled
org-buffers-list:by                        10          16.296418000  1.6296418000
org-buffers-list                           10          16.295753     1.6295753000
org-buffers-group-by                       10          6.633566      0.6633566
org-buffers-map-entries                    160         5.7454820000  0.0359092625
org-buffers-parse-selected-entries         150         5.285194      0.0352346266
org-buffers-insert-parsed-entry            440         0.3481630000  0.0007912795
org-buffers-get-buffer-props               440         0.0485260000  0.0001102863
org-buffers-exclude-p                      680         0.0235800000  3.467...e-05
org-buffers-mode                           10          0.0008060000  8.060...e-05
org-buffers-set-state                      20          0.000356      1.78e-05



*** before map headings macro
org-buffers-list:by                        10          40.482967     4.0482967
org-buffers-list                           11          40.480842     3.6800765454
org-buffers-group-by                       11          19.152886     1.7411714545
org-buffers-map-entries                    242         17.471287999  0.0721954049
org-buffers-parse-selected-entries         231         16.984615000  0.0735264718
org-buffers-toggle-properties              1           3.538426      3.538426
org-buffers-insert-parsed-entry            891         1.2092340000  0.0013571649
org-buffers-get-buffer-props               891         0.1646129999  0.0001847508
org-buffers-exclude-p                      1144        0.0496820000  4.342...e-05
org-buffers-mode                           11          0.001076      9.781...e-05
org-buffers-set-state                      22          0.0006159999  2.799...e-05


*** 3
***** Timings
      Ignore top time as this includes user dithering.
******* by: dirname -> major-mode
********* init
org-buffers-list:by                        1           5.914523      5.914523
org-buffers-list                           1           3.922159      3.922159
org-buffers-map-entries                    23          1.8343449999  0.0797541304
org-buffers-group-by                       1           1.73983       1.73983
org-buffers-parse-selected-entries         21          1.5756780000  0.0750322857
org-buffers-insert-entry                   81          1.5235690000  0.0188094938
org-buffers-insert-parsed-entry            81          0.0770639999  0.0009514074
org-buffers-parse-entry                    81          0.020705      0.0002556172
org-buffers-get-buffer-props               81          0.0150890000  0.0001862839
org-buffers-exclude-p                      104         0.0052450000  5.043...e-05
org-buffers-mode                           1           0.000135      0.000135
org-buffers-set-state                      2           7.099...e-05  3.549...e-05

********* with parse-buffer inline
org-buffers-list:by                        1           5.638731      5.638731
org-buffers-list                           1           3.542067      3.542067
org-buffers-map-entries                    23          2.0996669999  0.0912898695
org-buffers-group-by                       1           1.99616       1.99616
org-buffers-parse-selected-entries         21          1.2383170000  0.0589674761
org-buffers-insert-entry                   81          1.1949499999  0.0147524691
org-buffers-insert-parsed-entry            81          0.371138      0.0045819506
org-buffers-get-buffer-props               81          0.0142690000  0.0001761604
org-buffers-exclude-p                      104         0.005389      5.181...e-05
org-buffers-mode                           1           8.8e-05       8.8e-05
org-buffers-set-state                      2           7.2e-05       3.6e-05

********* with dolist in o-b-list
org-buffers-list:by                        1           5.802007      5.802007
org-buffers-list                           1           3.53931       3.53931
org-buffers-map-entries                    23          1.79665       0.0781152173
org-buffers-group-by                       1           1.715616      1.715616
org-buffers-insert-entry                   81          1.468053      0.0181241111
org-buffers-parse-selected-entries         21          1.253252      0.0596786666
org-buffers-insert-parsed-entry            81          0.3776680000  0.0046625679
org-buffers-get-buffer-props               81          0.0150909999  0.0001863086
org-buffers-exclude-p                      104         0.0043040000  4.138...e-05
org-buffers-mode                           1           8.8e-05       8.8e-05
org-buffers-set-state                      2           7.3e-05       3.65e-05
********* with insert-entry inline
*********** 2
org-buffers-list:by                        1           4.991089      4.991089
org-buffers-list                           1           3.435613      3.435613
org-buffers-map-entries                    23          2.0616669999  0.0896376956
org-buffers-group-by                       1           1.669686      1.669686
org-buffers-parse-selected-entries         21          1.508732      0.0718443809
org-buffers-insert-parsed-entry            81          0.0756260000  0.0009336543
org-buffers-get-buffer-props               81          0.0142789999  0.0001762839
org-buffers-exclude-p                      104         0.004253      4.089...e-05
org-buffers-mode                           1           0.000106      0.000106
org-buffers-set-state                      2           7.3e-05       3.65e-05
*********** 1
org-buffers-list:by                        1           5.802236      5.802236
org-buffers-list                           1           3.576863      3.576863
org-buffers-map-entries                    23          1.8523519999  0.0805370434
org-buffers-group-by                       1           1.739365      1.739365
org-buffers-parse-selected-entries         21          1.5744040000  0.0749716190
org-buffers-insert-parsed-entry            81          0.0765689999  0.0009452962
org-buffers-get-buffer-props               81          0.0151230000  0.0001867037
org-buffers-exclude-p                      104         0.0046640000  4.484...e-05
org-buffers-mode                           1           8.4e-05       8.4e-05
org-buffers-s


******* major-mode -> dirname
org-buffers-list:by                        1           9.14238       9.14238
org-buffers-list                           1           3.553673      3.553673
org-buffers-map-entries                    24          1.8469299999  0.0769554166
org-buffers-group-by                       1           1.742176      1.742176
org-buffers-insert-entry                   81          1.4543199999  0.0179545679
org-buffers-parse-selected-entries         22          1.284015      0.0583643181
org-buffers-insert-parsed-entry            81          0.0775440000  0.0009573333
org-buffers-parse-entry                    81          0.0196320000  0.0002423703
org-buffers-get-buffer-props               81          0.0145090000  0.0001791234
org-buffers-exclude-p                      104         0.0043900000  4.221...e-05
org-buffers-mode                           1           0.000135      0.000135
org-buffers-set-state                      2           7.3e-05       3.65e-05
*** 1
***** Buffers
******* fundamental
********* [[buffer:*ELP%20Profiling%20Results*][*ELP Profiling Results*]]
********* [[buffer:*ESS*][*ESS*]]
********* [[buffer:*Messages*][*Messages*]]
******* help
********* [[buffer:*Help*][*Help*]]
******* lisp-interaction
********* [[buffer:*scratch*][*scratch*]]
******* org
********* [[buffer:R.org][R.org]]
********* [[buffer:abc.org][abc.org]]
********* [[buffer:books.org][books.org]]
********* [[buffer:brithist.org][brithist.org]]
********* [[buffer:bs-pca.org][bs-pca.org]]
********* [[buffer:camera.org][camera.org]]
********* [[buffer:cmdline.org][cmdline.org]]
********* [[buffer:computing.org][computing.org]]
********* [[buffer:dbm.org][dbm.org]]
********* [[buffer:eee.org][eee.org]]
********* [[buffer:emacs.org][emacs.org]]
********* [[buffer:events.org][events.org]]
********* [[buffer:films.org][films.org]]
********* [[buffer:food.org][food.org]]
********* [[buffer:geospiza.org][geospiza.org]]
********* [[buffer:git.org][git.org]]
********* [[buffer:info.org][info.org]]
********* [[buffer:jobs.org][jobs.org]]
********* [[buffer:js-mr.org][js-mr.org]]
********* [[buffer:linux-setup.org][linux-setup.org]]
********* [[buffer:mary.org][mary.org]]
********* [[buffer:music.org][music.org]]
********* [[buffer:musiclib.org][musiclib.org]]
********* [[buffer:notes.org][notes.org]]
********* [[buffer:org-R.org][org-R.org]]
********* [[buffer:org.org][org.org]]
********* [[buffer:pa-bgs.org][pa-bgs.org]]
********* [[buffer:panama.org][panama.org]]
********* [[buffer:pdflib.org][pdflib.org]]
********* [[buffer:people.org][people.org]]
********* [[buffer:pobi.org][pobi.org]]
********* [[buffer:presents.org][presents.org]]
********* [[buffer:reading.org][reading.org]]
********* [[buffer:rockbox.org][rockbox.org]]
********* [[buffer:sept09-trip.org][sept09-trip.org]]
********* [[buffer:sergio.org][sergio.org]]
********* [[buffer:shellfish.org][shellfish.org]]
********* [[buffer:tasks.org][tasks.org]]
********* [[buffer:thoughts.org][thoughts.org]]
********* [[buffer:ubuntu.org][ubuntu.org]]
********* [[buffer:visa.org][visa.org]]
********* [[buffer:want.org][want.org]]
********* [[buffer:work-etc.org][work-etc.org]]
********* [[buffer:work.org][work.org]]
********* [[buffer:wuetal-results.org][wuetal-results.org]]
********* [[buffer:wuetal-structure.org][wuetal-structure.org]]
********* [[buffer:wuetal.org][wuetal.org]]
******* org-agenda
********* [[buffer:*Org%20Agenda*][*Org Agenda*]]
***** Times
Times for "g"

org-buffers-list:refresh                   1           1.349756      1.349756
org-buffers-list                           1           1.349729      1.349729
org-buffers-insert-entry                   53          0.7780579999  0.0146803396
org-buffers-group-by                       1           0.363466      0.363466
org-buffers-map-entries                    6           0.3291670000  0.0548611666
org-buffers-parse-selected-entries         5           0.304079      0.0608157999
org-buffers-insert-parsed-entry            53          0.0234120000  0.0004417358
org-buffers-parse-entry                    53          0.010689      0.0002016792
org-buffers-get-buffer-props               53          0.0098219999  0.0001853207
org-buffers-exclude-p                      62          0.0028829999  4.65e-05
org-buffers-mode                           1           9.4e-05       9.4e-05
org-buffers-set-state                      1           2.5e-05       2.5e-05
*** 2
***** Buffers
******* dired
********* [[buffer:lisp][lisp]]
********* [[buffer:src][src]]
******* emacs-lisp
********* [[buffer:org-buffers.el][org-buffers.el]]
******* fundamental
********* [[buffer:*ESS*][*ESS*]]
********* [[buffer:*Messages*][*Messages*]]
********* [[buffer:*magit-process*][*magit-process*]]
********* [[buffer:*magit-tmp*][*magit-tmp*]]
********* [[buffer:*mairix%20output*][*mairix output*]]
********* [[buffer:.newsrc-dribble][.newsrc-dribble]]
******* gnus-article
********* [[buffer:*Article%20nnimap%2Bdc:.zz_mairix-gen-mairix-1*][*Article nnimap+dc:.zz_mairix-gen-mairix-1*]]
********* [[buffer:*Article*][*Article*]]
******* gnus-browse
********* [[buffer:*Gnus%20Browse%20Server*][*Gnus Browse Server*]]
******* gnus-group
********* [[buffer:*Group*][*Group*]]
******* gnus-server
********* [[buffer:*Server*][*Server*]]
******* gnus-summary
********* [[buffer:*Summary%20INBOX*][*Summary INBOX*]]
********* [[buffer:*Summary%20nnimap%2Bdc:.zz_mairix-gen-mairix-1*][*Summary nnimap+dc:.zz_mairix-gen-mairix-1*]]
******* help
********* [[buffer:*Help*][*Help*]]
******* magit
********* [[buffer:*magit:%20org-buffers*][*magit: org-buffers*]]
********* [[buffer:*magit:%20src*][*magit: src*]]
******* magit-log-edit
********* [[buffer:*magit-log-edit*][*magit-log-edit*]]
******* mail
********* [[buffer:*mail*][*mail*]]
******* message
********* [[buffer:*sent%20mail%20to%20Tina%20Hu*][*sent mail to Tina Hu*]]
********* [[buffer:*sent%20mail%20to%20dandavison0@gmail.com*][*sent mail to dandavison0@gmail.com*]]
********* [[buffer:*sent%20mail%20to%20ithelp@stats.ox.ac.uk*][*sent mail to ithelp@stats.ox.ac.uk*]]
********* [[buffer:*sent%20wide%20reply%20to%20Dan%20Davison*][*sent wide reply to Dan Davison*]]
********* [[buffer:*sent%20wide%20reply%20to%20Dan%20Davison*<2>][*sent wide reply to Dan Davison*<2>]]
********* [[buffer:*sent%20wide%20reply%20to%20Martin%20Davison*][*sent wide reply to Martin Davison*]]
********* [[buffer:*sent%20wide%20reply%20to%20Scott%20Kostyshak*][*sent wide reply to Scott Kostyshak*]]
******* org
********* [[buffer:R.org][R.org]]
********* [[buffer:README][README]]
********* [[buffer:abc.org][abc.org]]
********* [[buffer:books.org][books.org]]
********* [[buffer:brithist.org][brithist.org]]
********* [[buffer:bs-pca.org][bs-pca.org]]
********* [[buffer:camera.org][camera.org]]
********* [[buffer:cmdline.org][cmdline.org]]
********* [[buffer:computing.org][computing.org]]
********* [[buffer:dbm.org][dbm.org]]
********* [[buffer:dmesg][dmesg]]
********* [[buffer:eee.org][eee.org]]
********* [[buffer:emacs.org][emacs.org]]
********* [[buffer:events.org][events.org]]
********* [[buffer:films.org][films.org]]
********* [[buffer:food.org][food.org]]
********* [[buffer:geospiza.org][geospiza.org]]
********* [[buffer:getmailrc-stats][getmailrc-stats]]
********* [[buffer:git.org][git.org]]
********* [[buffer:info.org][info.org]]
********* [[buffer:jobs.org][jobs.org]]
********* [[buffer:js-mr.org][js-mr.org]]
********* [[buffer:linux-setup.org][linux-setup.org]]
********* [[buffer:mary.org][mary.org]]
********* [[buffer:music.org][music.org]]
********* [[buffer:musiclib.org][musiclib.org]]
********* [[buffer:simsec.org][simsec.org]]
********* [[buffer:tmp][tmp]]
********* [[buffer:update][update]]
********* [[buffer:update<2>][update<2>]]
********* [[buffer:z.org][z.org]]
******* perl
********* [[buffer:msg.pl][msg.pl]]
******* sh
********* [[buffer:getmail-dan][getmail-dan]]
********* [[buffer:sendmail-dan][sendmail-dan]]
***** Times
******* 1
org-buffers-list:refresh                   1           2.03182       2.03182
org-buffers-list                           1           2.031728      2.031728
org-buffers-group-by                       1           1.08542       1.08542
org-buffers-insert-entry                   62          0.895063      0.0144365000
org-buffers-map-entries                    17          0.782671      0.0460394705
org-buffers-parse-selected-entries         16          0.753268      0.04707925
org-buffers-insert-parsed-entry            62          0.0254550000  0.0004105645
org-buffers-parse-entry                    62          0.013704      0.0002210322
org-buffers-get-buffer-props               62          0.0108809999  0.0001754999
org-buffers-exclude-p                      83          0.0059429999  7.160...e-05
org-buffers-mode                           1           8.7e-05       8.7e-05
org-buffers-set-state                      1           2.4e-05       2.4e-05
******* 2
org-buffers-list:refresh                   1           2.577224      2.577224
org-buffers-list                           1           2.577192      2.577192
org-buffers-group-by                       1           1.264802      1.264802
org-buffers-insert-entry                   69          0.9877069999  0.0143145942
org-buffers-map-entries                    19          0.9401300000  0.0494805263
org-buffers-parse-selected-entries         18          0.907364      0.0504091111
org-buffers-insert-parsed-entry            69          0.0284710000  0.0004126231
org-buffers-parse-entry                    69          0.0154210000  0.0002234927
org-buffers-get-buffer-props               69          0.0132330000  0.0001917826
org-buffers-exclude-p                      90          0.0035400000  3.933...e-05
org-buffers-mode                           1           8.9e-05       8.9e-05
org-buffers-set-state                      1           2.4e-05       2.4e-05

******* dolist
org-buffers-list:refresh                   1           2.3848380000  2.3848380000
org-buffers-list                           1           2.384798      2.384798
org-buffers-insert-entry                   69          1.3048409999  0.0189107391
org-buffers-group-by                       1           1.02626       1.02626
org-buffers-map-entries                    19          0.964197      0.0507472105
org-buffers-parse-selected-entries         18          0.9301770000  0.0516765000
org-buffers-insert-parsed-entry            69          0.0307469999  0.0004456086
org-buffers-parse-entry                    69          0.0161510000  0.0002340724
org-buffers-get-buffer-props               69          0.0122460000  0.0001774782
org-buffers-exclude-p                      90          0.005709      6.343...e-05
org-buffers-mode                           1           8.7e-05       8.7e-05
org-buffers-set-state                      1           2.4e-05       2.4e-05

* Org config							   :noexport:
#+TODO: TODO(t) STARTED(s) | PROPOSED(p) DONE(d) CANCELLED(c)



